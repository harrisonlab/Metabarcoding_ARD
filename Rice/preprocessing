
for s in BAC FUN; do
  mkdir -p $PROJECT_FOLDER/data/$RUN/$s/fastq
  mkdir $PROJECT_FOLDER/data/$RUN/$s/filtered
  mkdir $PROJECT_FOLDER/data/$RUN/$s/unfiltered
  mkdir $PROJECT_FOLDER/data/$RUN/$s/fasta
done


# folder containing project files
PROJECT_FOLDER=~/projects/Rice

# sequencer run folder (in this instance all comparable data was in the same run)
RUN=.

# make the project folder
mkdir -p $PROJECT_FOLDER

# link to metabarcoding pipeline (specific for authors profile)
ln -s $PROJECT_FOLDER/metabarcoding_pipeline $MBPL

# Make some folders
mkdir -p $PROJECT_FOLDER/data/$RUN/fastq
mkdir $PROJECT_FOLDER/data/$RUN/quality
mkdir $PROJECT_FOLDER/data/$RUN/ambiguous

# variable to hold folder names (BAC and FUN)
RIB="BAC FUN"

# loop through the RIB variable, i.e. s = BAC on first loop, S= FUN on second loop, and create the folders
for s in $RIB; do
 mkdir -p $PROJECT_FOLDER/data/$RUN/$s/fastq
 mkdir $PROJECT_FOLDER/data/$RUN/$s/filtered
 mkdir $PROJECT_FOLDER/data/$RUN/$s/unfiltered
 mkdir $PROJECT_FOLDER/data/$RUN/$s/fasta
done

# QC
for FILE in $PROJECT_FOLDER/data/$RUN/fastq/*; do
 $PROJECT_FOLDER/metabarcoding_pipeline/scripts/PIPELINE.sh -c qcheck $FILE $PROJECT_FOLDER/data/$RUN/quality
done

# BAC and FUN are multiplexed. Can seperate by the primer sequences (p1 for BAC, p2 for FUN)
P1F=CCTACGGGNGGCWGCAG
P1R=GACTACHVGGGTATCTAATCC
P2F=CTTGGTCATTTAGAGGAAGTAA
P2R=ATATGCTTAAGTTCAGCGGG

# demultiplex with 0 difference in primer seqeunce
$PROJECT_FOLDER/metabarcoding_pipeline/scripts/PIPELINE.sh -c demultiplex \
 "$PROJECT_FOLDER/data/$RUN/fastq/*R1*.gz" 0 \
 $P1F $P1R $P2F $P2R

mv $PROJECT_FOLDER/data/$RUN/fastq/*ps1* $PROJECT_FOLDER/data/$RUN/BAC/fastq/.
mv $PROJECT_FOLDER/data/$RUN/fastq/*ps2* $PROJECT_FOLDER/data/$RUN/FUN/fastq/.
mv $PROJECT_FOLDER/data/$RUN/fastq/*ambig* $PROJECT_FOLDER/data/$RUN/ambiguous/.

# pre-process BAC files (min length 150, max diffs 5, quality 0.5)
$PROJECT_FOLDER/metabarcoding_pipeline/scripts/PIPELINE.sh -c 16Spre \
 "$PROJECT_FOLDER/data/$RUN/BAC/fastq/*R1*.fastq" \
 $PROJECT_FOLDER/data/$RUN/BAC \
 $PROJECT_FOLDER/metabarcoding_pipeline/primers/all_primers_adapters.db \
 300 5 0.5 17 21 

# Pre-process FUN files (min length 150, max diffs 5, quality 0.5) 
$PROJECT_FOLDER/metabarcoding_pipeline/scripts/PIPELINE.sh -c ITSpre \
 "$PROJECT_FOLDER/data/$RUN/FUN/fastq/*R1*.fastq" \
 $PROJECT_FOLDER/data/$RUN/FUN \
 $PROJECT_FOLDER/metabarcoding_pipeline/primers/all_primers_adapters.db \
 200 1 23 21

for RUN in $RUNS; do
  for F in $PROJECT_FOLDER/data/$RUN/FUN/fasta/*_R1.fa; do 
   FO=$(awk -F"/" '{print $NF}' <<< $F|awk -F"_" '{print $1".r1.fa"}'); 
   L=$(awk -F"/" '{print $NF}' <<< $F|awk -F"_" '{print $1}') ;
   echo $L
   awk -v L=$L '/>/{sub(".*",">"L"."(++i))}1' $F > $FO.tmp && mv $FO.tmp $PROJECT_FOLDER/data/$RUN/FUN/filtered/$FO;
  done
done


# Ambiguous data
for RUN in $RUNS; do
  $PROJECT_FOLDER/metabarcoding_pipeline/scripts/PIPELINE.sh -c AMBIGpre \
   "$PROJECT_FOLDER/data/$RUN/ambiguous/*R1*.fastq" \
   $PROJECT_FOLDER/data/$RUN/ambiguous \
   $PROJECT_FOLDER/metabarcoding_pipeline/primers/primers.db \
   $PROJECT_FOLDER/metabarcoding_pipeline/primers/adapters.db \
   300 5
done

# make analysis folders
mkdir $PROJECT_FOLDER/analysis/WP3
for s in BAC FUN; do
  mkdir -p $PROJECT_FOLDER/analysis/WP3/$s/filtered
  mkdir $PROJECT_FOLDER/analysis/WP3/$s/unfiltered
done

# link processed data to anaylsis folders
for RUN in $RUNS; do
  for s in BAC FUN; do
    ln -s $PROJECT_FOLDER/data/$RUN/$s/unfiltered/* $PROJECT_FOLDER/analysis/WP3/$s/unfiltered/.
    ln -s $PROJECT_FOLDER/data/$RUN/$s/filtered/* $PROJECT_FOLDER/analysis/WP3/$s/filtered/.
  done
  ln -s $PROJECT_FOLDER/data/$RUN/ambiguous/joined/* $PROJECT_FOLDER/analysis/WP3/ambiguous/joined.
  ln -s $PROJECT_FOLDER/data/$RUN/ambiguous/unjoined/* $PROJECT_FOLDER/analysis/WP3/ambiguous/unjoined.

done
